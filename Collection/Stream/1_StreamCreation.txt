Stream Creation
****************
1)Empty Stream

Stream<String> stream = Stream.empty();
stream.forEach(System.out::println);
========================================
2)Arrays
 // Array can also be a source of a Stream
    Stream<String> streamOfArray = Stream.of("a", "b", "c");
    streamOfArray.forEach(System.out::println);

// creating from existing array or of a part of an array:
        String[] arr = new String[] { "a", "b", "c" };
        Stream<String> streamOfArrayFull = Arrays.stream(arr);
        streamOfArrayFull.forEach(System.out::println);
===========================================================
3)From Collections
Collection<String> collection = Arrays.asList
                  ("JAVA", "J2EE", "Spring", "Hibernate");
        Stream<String> stream2 = collection.stream();
        stream2.forEach(System.out::println);

List<String> list = Arrays.asList
 			("JAVA", "J2EE", "Spring", "Hibernate");
        Stream<String> stream3 = list.stream();
        stream3.forEach(System.out::println);

=======================================================
4. From Stream.builder()
Stream<String> streamBuilder = Stream.<String>builder()
					.add("a")		
					.add("b")
					.add("c")
					.build();
streamBuilder.forEach(System.out::println);
=========================================================
5. From Stream.generate()
Stream<String>streamGenerated=Stream.
			generate(()->"element").limit(10);
streamGenerated.forEach(System.out::println);
==========================================================
6. From Stream.iterate()
Stream<Integer> streamIterated = Stream.iterate(1, n -> n + 2)
							.limit(5);
streamIterated.forEach(System.out::println);
============================================================
7. Stream of File
import java.io.IOException;
import java.nio.charset.Charset;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.stream.Stream;

public class StreamCreationExamples {
    public static void main(String[] args) throws IOException {

        Path path = Paths.get("C:\\file.txt");
        Stream<String> streamOfStrings = Files.lines(path);
        Stream<String> streamWithCharset = Files.lines
				(path, Charset.forName("UTF-8"));
        streamOfStrings.forEach(System.out::println);
        streamWithCharset.forEach(System.out::println);
        streamOfStrings.close();
        streamWithCharset.close();
    }
}
=============================================================
8. Stream of Primitives

 IntStream intStream = IntStream.range(1, 3);
       intStream.forEach(System.out::println);

       LongStream longStream = LongStream.rangeClosed(1, 3);
       longStream.forEach(System.out::println);

       Random random = new Random();
       DoubleStream doubleStream = random.doubles(3);
       doubleStream.forEach(System.out::println);
==============================================================