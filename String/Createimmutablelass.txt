How to create immutable class
Immutable:
Immutable simply means unmodifiable or unchangeable.
Once String object is created its data or state can't be changed but a new String object is created.
String and Wrapper class are immutable class.
Rules of creating Immutable class
The class is final so we cannot create the subclass.
The instance variable of the class is final i.e. we cannot change the value of it after creating an object.
There is no setter methods i.e. we have no option to change the value of the instance variable.
These points makes this class as immutable.
Example
public final class Employee  
{    
final String pancardNumber;    
public Employee(String pancardNumber)  
{    
this.pancardNumber=pancardNumber;    
}  
public String getPancardNumber(){    
return pancardNumber;    
}    
}    
public class ImmutableDemo  
{  
public static void main(String ar[])  
{  
Employee e = new Employee("ABC123");  
String s1 = e.getPancardNumber();  
System.out.println("Pancard Number: " + s1);  
}  
}  
